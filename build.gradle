buildscript {
    repositories {
        maven {
            url 'https://github.com/steffenschaefer/gwt-gradle-plugin/raw/maven-repo/'
        }
        mavenCentral()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.2'
    }
}


allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
	apply plugin: 'gwt'
	apply plugin: 'war'
	apply plugin: 'jetty'
	
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Wild West Bank',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'commons-collections:commons-collections:3.2'
    
    compile 'com.google.gwt:gwt-servlet:2.7.0'
    compile 'com.google.gwt:gwt-user:2.7.0'
    compile 'com.sencha.gxt:gxt:3.1.1'
    
   	compile 'org.springframework:spring-context:4.2.0.RELEASE'
   	compile 'org.springframework:spring-web:4.2.0.RELEASE'
   	compile 'org.springframework:spring-orm:4.2.0.RELEASE'
   	compile 'org.springframework.data:spring-data-jpa:1.8.2.RELEASE'
   	
   	compile 'org.hibernate:hibernate-entitymanager:4.3.11.Final'
   	compile 'org.hibernate:hibernate-core:4.3.11.Final'
   	
   	compile 'org.hsqldb:hsqldb:2.3.3'
   	compile 'com.h2database:h2:1.3.175'
   	compile 'postgresql:postgresql:9.1-901.jdbc4'
   	
   	compile 'org.liquibase:liquibase-core:3.4.1'
   	
    testCompile 'junit:junit:4.+'
}

gwt{
	gwtVersion='2.7.0'
	minHeapSize = "512M";
    maxHeapSize = "1024M";
    
	modules 'com.wildwestbank.modules.common.Common', 'com.wildwestbank.modules.login.Login', 'com.wildwestbank.modules.app.App'
}

compileGwt{
    jvmArgs = ['-Xms512m -Xmx2048m -XX:MaxPermSize=256m']
}

task jettyDraftWar(type: JettyRunWar) {
    dependsOn draftWar
    dependsOn.remove('war')
    webApp=draftWar.archivePath
}

task draftWarTemplate(type: Copy) {
    with tasks.draftWar
    dependsOn tasks.draftWar.dependsOn
    into file('war')
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

clean{
    doLast(){
        project.delete 'bin', 'war', '.gwt', 'gwt-unitCache'
    }
}
